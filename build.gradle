plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'dev.n0wst4ndup'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url = 'https://repo.spring.io/snapshot' }
}

ext {
	set('springAiVersion', "1.0.0")
}

dependencies {
  // webflux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
  // mcp client
	implementation 'org.springframework.ai:spring-ai-starter-mcp-client-webflux'
  // r2dbc - postgres
  implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
  implementation 'org.postgresql:r2dbc-postgresql:1.0.7.RELEASE'
  // security
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
  // redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
  // health check
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
  // lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
  // devtool
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  // test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
